on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching any tag *, i.e. 'v1.0', 'v20.15.10' or even 'mod1'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      #checkout vanilla theme from master
      - uses: actions/checkout@v2
        with:
          ref: "master"
          path: theme

      #checkout also this branch
      - uses: actions/checkout@v2
        with:
          path: override

      - name: Override (copy) configuration
        run: cp override/configuration.json theme/src/main/resources/configuration.json

      - name: Override (copy) additional resources
        run: cp override/additional theme/src/main/resources/

      - name: Build with Maven
        run: cd theme && mvn --batch-mode --update-snapshots verify

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} for dissco
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: theme/target/keycloak-theme-vanilla.jar
          asset_name: keycloak-theme-vanilla.jar
          asset_content_type: application/java-archive